% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot.FEM.time}
\alias{plot.FEM.time}
\title{Plot a \code{FEM.time} object at a given time}
\usage{
\method{plot}{FEM.time}(FEMtimeobject,t,lambdaS,lambdaT, num_refinements, ...)
}
\arguments{
\item{FEMtimeobject}{A \code{FEM.time} object.}

\item{t}{time at which do the plot, may be a vector}

\item{lambdaS}{index of the space penalization parameter to use for the plot, useful when \code{FEM.time} returned by \code{smooth.FEM.time} using GCV}

\item{lambdaT}{index of the time penalization parameter to use for the plot, useful when \code{FEM.time} returned by \code{smooth.FEM.time} using GCV}

\item{num_refinements}{A natural number specifying how many bisections should be applied to each triangular element for
plotting purposes. This functionality is useful where a discretization with 2nd order Finite Element is applied.
This parameter can be specified only when a FEM object defined over a 2D mesh is plotted.}

\item{...}{Arguments representing graphical options to be passed to \link[rgl]{plot3d}.}
}
\description{
Three-dimensional plot of a \code{FEM.time} object, generated by \code{FEM.time} or returned by
\code{smooth.FEM.time}.
If the \code{mesh} of the \code{FEMbasis} component is of class \code{mesh.2D} both the 3rd axis and the color represent
the value of the coefficients for the Finite Element basis expansion (\code{coeff} component of the \code{FEM.time} object).
If the \code{mesh} is of class \code{mesh.3D}, the color of each triangle or tetrahedron represent the mean value of
the coefficients for the Finite Element basis expansion (\code{coeff}).
}
\examples{
library(fdaPDE)
## Upload the horseshoe2D data
data(horseshoe2D)

## Create the 2D mesh
mesh = create.mesh.2D(nodes = rbind(boundary_nodes, locations), segments = boundary_segments)
## Create the FEM basis
FEMbasis = create.FEM.basis(mesh)
## Compute the coeff vector evaluating the desired function at the mesh nodes
## In this case we consider the fs.test() function introduced by Wood et al. 2008
time = 1:5
coeff = rep(fs.test(mesh$nodes[,1], mesh$nodes[,2], exclude = FALSE),5)*time
## Create the FEM.time object
FEM_time_function = FEM.time(coeff=coeff, time_mesh=1:5,FEMbasis=FEMbasis,FLAG_PARABOLIC=T)

## Plot the FEM function
t = c(1.2,1.5,3.6,2.4,4.5)
plot(FEM_time_function,t)
}
\seealso{
\code{\link{FEM.time}}, \code{\link{image.FEM.time}}
}
